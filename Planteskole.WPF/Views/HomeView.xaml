<UserControl x:Class="Planteskole.WPF.Views.HomeView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:Planteskole.WPF.ViewModels"
             xmlns:core="clr-namespace:System;assembly=mscorlib"
             xmlns:enums="clr-namespace:Planteskole.Domain.Models;assembly=Planteskole.Domain"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800">

    <UserControl.Resources>
        <ObjectDataProvider x:Key="EnumFootType" MethodName="GetValues" ObjectType="{x:Type core:Enum}">
            <ObjectDataProvider.MethodParameters>
                <x:Type TypeName="enums:Plant+FootType"/>
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>
        <ObjectDataProvider x:Key="EnumWateringNeeds" MethodName="GetValues" ObjectType="{x:Type core:Enum}">
            <ObjectDataProvider.MethodParameters>
                <x:Type TypeName="enums:Plant+WateringNeeds"/>
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>
        <ObjectDataProvider x:Key="EnumTemperatureNeeds" MethodName="GetValues" ObjectType="{x:Type core:Enum}">
            <ObjectDataProvider.MethodParameters>
                <x:Type TypeName="enums:Plant+TemperatureNeeds"/>
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>
        <Style TargetType="Button">
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="Foreground" Value="Black" />
            <Setter Property="BorderBrush" Value="{StaticResource BrushPrimary2}"/>
            <Setter Property="BorderThickness" Value="2"/>
            <Setter Property="Width" Value="90"/>
            <Setter Property="Height" Value="25"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid x:Name="grid">
                            <Border x:Name="border" CornerRadius="2" BorderBrush="{StaticResource BrushPrimary1}" BorderThickness="1" Background="{StaticResource BrushPrimary1}">
                                <ContentPresenter HorizontalAlignment="Center"
                                      VerticalAlignment="Center"
                                      TextElement.FontWeight="Normal">
                                </ContentPresenter>
                            </Border>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource BrushPrimary2}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource BrushPrimary2}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource BrushPrimary1}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Opacity" TargetName="grid" Value="1"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="DataGrid">
            <Setter Property="Foreground" Value="{StaticResource BrushPrimary2}"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderBrush" Value="{StaticResource BrushPrimary2}"/>
            <Setter Property="HorizontalGridLinesBrush" Value="{StaticResource BrushPrimary1}" />
            <Setter Property="VerticalGridLinesBrush" Value="{StaticResource BrushPrimary1}" />
            <Setter Property="RowStyle">
                <Setter.Value>
                    <Style TargetType="DataGridRow">
                        <Style.Triggers>
                            <!-- Highlight a grid row as the mouse passes over -->
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="{StaticResource BrushPrimary2}" />
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="{x:Type DataGridColumnHeader}">
            <Setter Property="Height" Value="25" />
            <Setter Property="SeparatorBrush" Value="{StaticResource BrushPrimary2}" />
            
        </Style>
    </UserControl.Resources>
    
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="*"/>
            <RowDefinition Height="auto"/>
        </Grid.RowDefinitions>


        <ScrollViewer>
            <StackPanel Grid.Row="0" Margin="10">
                <DataGrid CanUserAddRows="False" ItemsSource="{Binding HomeView}" AutoGenerateColumns="False" DataGridCell.Selected="DataGridCell_Selected" SelectionChanged="DataGrid_SelectionChanged">
                    <DataGrid.Columns>
                        <DataGridTextColumn Binding="{Binding Id}" Header="Id" Width="auto" IsReadOnly="True"/>
                        <!--Remove later-->
                        <DataGridTextColumn Binding="{Binding Name}" Header="Name" Width="auto"/>
                        <DataGridTextColumn Binding="{Binding Amount}" Header="Amount" Width="auto"/>
                        <DataGridCheckBoxColumn Binding="{Binding Sellable}" Header="Sellable" Width="auto"/>
                        <DataGridCheckBoxColumn Binding="{Binding NeedsLight}" Header="Needs Light" Width="auto"/>
                        <DataGridCheckBoxColumn Binding="{Binding Vulnerable}" Header="Vulnerable" Width="auto"/>
                        <DataGridCheckBoxColumn Binding="{Binding NeedsTreeSupport}" Header="Needs Tree Support" Width="auto"/>
                        <DataGridTextColumn Binding="{Binding WeightPerPlant}" Header="Weight Per Plant" Width="auto"/>
                        <DataGridTextColumn Binding="{Binding DepthPerPlant}" Header="Depth Per Plant" Width="auto"/>
                        <DataGridTextColumn Binding="{Binding WidthPerPlant}" Header="Width Per Plant" Width="auto"/>
                        <DataGridTextColumn Binding="{Binding LocationName}" Header="Location" Width="auto"/>
                        <DataGridTextColumn Binding="{Binding AreaName}" Header="Area" Width="auto"/>

                        <DataGridComboBoxColumn ItemsSource="{Binding Source={StaticResource EnumFootType}}" SelectedItemBinding="{Binding FootEnum}" Header="Foot Type"/>
                        <DataGridComboBoxColumn ItemsSource="{Binding Source={StaticResource EnumWateringNeeds}}" SelectedItemBinding="{Binding WNeeds}" Header="Watering"/>
                        <DataGridComboBoxColumn ItemsSource="{Binding Source={StaticResource EnumTemperatureNeeds}}" SelectedItemBinding="{Binding PTemperature}" Header="Temperature"/>

                    </DataGrid.Columns>
                    <DataGrid.GroupStyle>
                        <GroupStyle>
                            <GroupStyle.HeaderTemplate>
                                <DataTemplate>
                                    <DockPanel Background="Gray">
                                        <TextBlock Text="{Binding Path=Name}" Foreground="Black" FontSize="18" FontWeight="Bold" Padding="5"/>
                                    </DockPanel>
                                </DataTemplate>
                            </GroupStyle.HeaderTemplate>
                        </GroupStyle>
                        <GroupStyle>
                            <GroupStyle.ContainerStyle>
                                <Style TargetType="{x:Type GroupItem}" >
                                    <Setter Property="Margin" Value="20,5,2,5" />
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="{x:Type GroupItem}">
                                                <Expander BorderBrush="LightGray" BorderThickness="2" IsExpanded="True" Background="LightGray"  >
                                                    <Expander.Header>
                                                        <StackPanel Orientation="Horizontal">
                                                            <TextBlock VerticalAlignment="Center" FontWeight="Bold" Text="{Binding Path=Name}" Width="200" FontSize="14"/>
                                                            <TextBlock Text="Item count: " />
                                                            <TextBlock FontWeight="Bold" Text="{Binding ItemCount}" />
                                                        </StackPanel>
                                                    </Expander.Header>
                                                    <Expander.Content>
                                                        <ItemsPresenter />
                                                    </Expander.Content>
                                                </Expander>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </GroupStyle.ContainerStyle>
                        </GroupStyle>
                    </DataGrid.GroupStyle>
                </DataGrid>
            </StackPanel>
        </ScrollViewer>
        
        
        <StackPanel Orientation="Horizontal" Grid.Row="1" Margin="10" HorizontalAlignment="Center" >
            <Button Command="{Binding removeGroupCommand}" Content="Remove Group" Margin="2" Padding="5" />
            <Button Command="{Binding groupByLocationCommand}" Content="Location" Margin="2" Padding="5"/>
            <Button Command="{Binding groupByAreaCommand}" Content="Area" Margin="2" Padding="5"/>
            <Button Command="{Binding saveButtonCommand}" Content="Save" Margin="2" Padding="5"/>
            <Button Command="{Binding deleteButtonCommand}" Content="Delete" Margin="2" Padding="5"/>
        </StackPanel>

    </Grid>
</UserControl>
