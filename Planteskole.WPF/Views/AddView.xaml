<UserControl x:Class="Planteskole.WPF.Views.AddView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:Planteskole.WPF.Views"
             xmlns:core="clr-namespace:System;assembly=mscorlib"
             xmlns:enums="clr-namespace:Planteskole.Domain.Models;assembly=Planteskole.Domain"
             xmlns:converters="clr-namespace:Planteskole.WPF.Converters"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800"
             FontFamily="Roboto">


    <UserControl.Resources>
        <!--<Style TargetType="StackPanel" x:Key="StackPanelInfoPlant">
            <Setter Property="Visibility" Value="Visible"/>
            <Style.Triggers>
                <DataTrigger Binding="{Binding IsVisible}" Value="True">
                    <Setter Property="Visibility" Value="Visible"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>
        <Style TargetType="StackPanel" x:Key="StackPanelInfoLocation">
            <Setter Property="Visibility" Value="Collapsed"/>
            <Style.Triggers>
                <DataTrigger Binding="{Binding IsVisible}" Value="True">
                    <Setter Property="Visibility" Value="Visible"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>
        <Style TargetType="StackPanel" x:Key="StackPanelInfoArea">
            <Setter Property="Visibility" Value="Collapsed"/>
            <Style.Triggers>
                <DataTrigger Binding="{Binding IsVisible}" Value="True">
                    <Setter Property="Visibility" Value="Visible"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>-->
        <BooleanToVisibilityConverter x:Key="BoolToVis" />
        
        <CollectionViewSource x:Key="PlantViewSource"/>
        <CollectionViewSource x:Key="LocationViewSourceResource" Source="{Binding ObservableLocations}">
            <CollectionViewSource.GroupDescriptions>
                <PropertyGroupDescription PropertyName="IsCompatible"/>
            </CollectionViewSource.GroupDescriptions>
        </CollectionViewSource>
        <CollectionViewSource x:Key="AreaViewSource"/>
        <converters:IsCompatibleToComboBoxTitleConverter x:Key="IsCompatibleToComboBoxTitleResource"/>
        <converters:LocNameAreaNameToLocationConverter x:Key="LocNameAreaNameToLocationConverterResource"/>
        <converters:AddMeasureToDimensionConverter x:Key="AddMeasureToDimensionConverterResource"/>
        <converters:AddMeasureToVolumeConverter x:Key="AddMeasureToVolumeConverterResource"/>

        <ObjectDataProvider x:Key="EnumFootType" MethodName="GetValues" ObjectType="{x:Type core:Enum}">
            <ObjectDataProvider.MethodParameters>
                <x:Type TypeName="enums:Plant+FootType"/>
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>
        <ObjectDataProvider x:Key="EnumWateringNeeds" MethodName="GetValues" ObjectType="{x:Type core:Enum}">
            <ObjectDataProvider.MethodParameters>
                <x:Type TypeName="enums:Plant+WateringNeeds"/>
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>
        <ObjectDataProvider x:Key="EnumTemperatureNeeds" MethodName="GetValues" ObjectType="{x:Type core:Enum}">
            <ObjectDataProvider.MethodParameters>
                <x:Type TypeName="enums:Plant+TemperatureNeeds"/>
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>

        <ObjectDataProvider x:Key="EnumWateringMethod" MethodName="GetValues" ObjectType="{x:Type core:Enum}">
            <ObjectDataProvider.MethodParameters>
                <x:Type TypeName="enums:Location+WateringMethod"/>
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>
        <ObjectDataProvider x:Key="EnumTemperatures" MethodName="GetValues" ObjectType="{x:Type core:Enum}">
            <ObjectDataProvider.MethodParameters>
                <x:Type TypeName="enums:Location+Temperatures"/>
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>
        <Style TargetType="Button">
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="Foreground" Value="White" />
            <Setter Property="BorderBrush" Value="{StaticResource BrushPrimary2}"/>
            <Setter Property="BorderThickness" Value="2"/>
            <Setter Property="Width" Value="110"/>
            <Setter Property="Height" Value="36"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="FontWeight" Value="Medium"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid x:Name="grid">
                            <Border x:Name="border" CornerRadius="2" BorderBrush="{StaticResource BrushPrimary1}" BorderThickness="1" Background="{StaticResource BrushPrimary1}">
                                <ContentPresenter HorizontalAlignment="Center"
                                      VerticalAlignment="Center"
                                      TextElement.FontWeight="Normal">
                                </ContentPresenter>
                            </Border>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource BrushPrimary2}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource BrushPrimary2}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource BrushPrimary1}"/>
                            </Trigger>
                            <!--<Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Opacity" TargetName="grid" Value="1"/>
                            </Trigger>-->
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        
        <Style TargetType="RadioButton">
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="Foreground" Value="White" />
            <Setter Property="BorderBrush" Value="{StaticResource BrushPrimary2}"/>
            <Setter Property="BorderThickness" Value="2"/>
            <Setter Property="Width" Value="110"/>
            <Setter Property="Height" Value="36"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="FontWeight" Value="Medium"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RadioButton}">
                        <Grid x:Name="grid">
                            <Border x:Name="border" CornerRadius="2" BorderBrush="{StaticResource BrushPrimary1}" BorderThickness="1" Background="{StaticResource BrushPrimary1}">
                                <ContentPresenter HorizontalAlignment="Center"
                                      VerticalAlignment="Center"
                                      TextElement.FontWeight="Normal">
                                </ContentPresenter>
                            </Border>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource BrushPrimary2}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource BrushPrimary2}"/>
                            </Trigger>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource BrushPrimary2}"/>
                            </Trigger>
                            <Trigger Property="IsChecked" Value="False">
                                <Setter Property="Opacity" TargetName="grid" Value="1"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource BrushPrimary1}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="DataGrid">
            <Setter Property="Foreground" Value="Black"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderBrush" Value="{StaticResource BrushPrimary2}"/>
            <Setter Property="HorizontalGridLinesBrush" Value="Black" />
            <Setter Property="VerticalGridLinesBrush" Value="LightGray" />
            <Setter Property="RowStyle">
                <Setter.Value>
                    <Style TargetType="DataGridRow">
                        <Style.Triggers>
                            <!-- Highlight a grid row as the mouse passes over -->
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="{StaticResource BrushPrimary2}" />
                                <Setter Property="Foreground" Value="White"/>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="DataGridQuickEdit" TargetType="DataGridCell" BasedOn="{StaticResource {x:Type DataGridCell}}">
            <Style.Triggers>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsMouseOver"  Value="True" />
                        <Condition Property="IsReadOnly" Value="False" />
                    </MultiTrigger.Conditions>
                    <MultiTrigger.Setters>
                        <Setter Property="IsEditing"  Value="True" />
                    </MultiTrigger.Setters>
                </MultiTrigger>
            </Style.Triggers>
        </Style>

        <!--<Style TargetType="{x:Type DataGridColumnHeader}">
            <Setter Property="Padding" Value="10,4" />
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="SeparatorBrush" Value="{StaticResource BrushPrimary2}"/>
        </Style>-->

        <Style TargetType="{x:Type DataGridColumnHeader}">
            <Setter Property="ContentTemplate">
                <Setter.Value>
                    <DataTemplate>
                        <TextBlock TextWrapping="Wrap" Text="{Binding}" Padding="10,4" FontSize="14">
                        </TextBlock>
                    </DataTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="SeparatorBrush" Value="{StaticResource BrushPrimary2}"/>
        </Style>

    </UserControl.Resources>
    <Grid Margin="15">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"></RowDefinition>
            <RowDefinition Height="*"></RowDefinition>
            <RowDefinition Height="Auto"></RowDefinition>
        </Grid.RowDefinitions>
        <!--<Grid.ColumnDefinitions>
            <ColumnDefinition/>
            <ColumnDefinition Width="100*"></ColumnDefinition>
        </Grid.ColumnDefinitions>-->

        <StackPanel Orientation="Horizontal" Grid.Row="0" Margin="2">
            <RadioButton Margin="2,0" x:Name="TogglingButton" Content="Edit Plants" Click="TogglingButtonClicked" IsChecked="True"/>
            <RadioButton Margin="2,0" x:Name="TogglingButtonLocation" Content="Edit Locations" Click="TogglingButtonClickedLocation" />
            <RadioButton Margin="2,0" x:Name="TogglingButtonArea" Content="Edit Areas" Click="TogglingButtonClickedArea" />
        </StackPanel>

        <!--<StackPanel Grid.Row="1" Name="StackPanelInfoPlant" >
            <TextBlock Text="Plants" FontSize="24" FontWeight="Black" FontFamily="Roboto" Margin="0,5,0,5" Foreground="{StaticResource BrushPrimary2}"/>

            <TextBlock Margin="0,0,0,5" Text="Name of the plant:"/>
            <ComboBox ItemsSource="{Binding TemplateName.View}" DisplayMemberPath="Name" SelectedValue="{Binding SelectedItem.Name, Mode=TwoWay}" SelectedValuePath="Name" IsEditable="true"/>

            <TextBlock Margin="0,5" Text="Amount:"/>
            <TextBox Text="{Binding SelectedItem.Amount, Mode=TwoWay, NotifyOnTargetUpdated=True}" TargetUpdated="OnTargetUpdated"/>

            <UniformGrid Rows="1" Margin="0,5">
                <StackPanel >
                    <TextBlock Text="Sellable" HorizontalAlignment="Center"/>
                    <CheckBox IsChecked="{Binding SelectedItem.Sellable, Mode=TwoWay}" HorizontalAlignment="Center"/>
                </StackPanel>
                <StackPanel >
                    <TextBlock Text="Needs Light" HorizontalAlignment="Center"/>
                    <CheckBox IsChecked="{Binding SelectedItem.NeedsLight, Mode=TwoWay}" HorizontalAlignment="Center"/>
                </StackPanel>
                <StackPanel>
                    <TextBlock Text="Vulnerable" HorizontalAlignment="Center"/>
                    <CheckBox IsChecked="{Binding SelectedItem.Vulnerable, Mode=TwoWay}" HorizontalAlignment="Center"/>
                </StackPanel>
                <StackPanel>
                    <TextBlock Text="Tree Support" HorizontalAlignment="Center"/>
                    <CheckBox IsChecked="{Binding SelectedItem.NeedsTreeSupport, Mode=TwoWay}" HorizontalAlignment="Center"/>
                </StackPanel>
            </UniformGrid>
            
            <TextBlock Margin="0,5" Text="Weight:"/>
            <TextBox Text="{Binding SelectedItem.Weight, Mode=TwoWay}"/>

            <TextBlock Margin="0,5" Text="Depth:"/>
            <TextBox Text="{Binding SelectedItem.Depth, Mode=TwoWay}"/>

            <TextBlock Margin="0,5" Text="Width:"/>
            <TextBox Text="{Binding SelectedItem.Width, Mode=TwoWay}"/>

            <TextBlock Margin="0,5" Text="Location:"/>
            <TextBox Text="{Binding SelectedItem.LocationName, Mode=TwoWay}"/>

            <TextBlock Margin="0,5" Text="Area:"/>
            <TextBox Text="{Binding SelectedItem.AreaName, Mode=TwoWay}"/>


            <TextBlock Margin="0,5" Text="Suggested Location:"/>
            <DataGrid x:Name="SuggestLocationGrid" ItemsSource="{Binding SuggestL.View}" AutoGenerateColumns="False">
                <DataGrid.Columns>
                    <DataGridTextColumn Header="Name" Binding="{Binding LocationName, Mode=OneWay}"/>
                    <DataGridTextColumn Header="Light" Binding="{Binding Light, Mode=OneWay}"/>
                    <DataGridTextColumn Header="Watering" Binding="{Binding WMethod, Mode=OneWay}"/>
                    <DataGridTextColumn Header="Temperature" Binding="{Binding LTemperatures, Mode=OneWay}"/>
                    <DataGridTextColumn Header="Tree Support" Binding="{Binding TreeSupport, Mode=OneWay}"/>
                    <DataGridTextColumn Header="AvailableSpace" Binding="{Binding AvailableSquareMeters, Mode=OneWay}"/>
                </DataGrid.Columns>
            </DataGrid>
        </StackPanel>-->

        <Grid Grid.Row="1" Margin="4,5,10,10">
            <DataGrid x:Name="PlantDataGrid" AutoGenerateColumns="False" TargetUpdated="OnTargetUpdated" 
                      EnableRowVirtualization="True" 
                      ItemsSource="{Binding PlantViewSource.View}" 
                      RowDetailsVisibilityMode="VisibleWhenSelected" SelectedItem="{Binding SelectedItem}"
                      Visibility="Visible"
                      DataGridCell.Selected ="DataGridCell_Selected"
                      CellStyle="{Binding Source={StaticResource DataGridQuickEdit}}">
                <DataGrid.Columns>
                    <!--<DataGridTextColumn Binding="{Binding Id}" Header="Id" Width="auto" IsReadOnly="True"/>-->
                    <!--Remove later-->
                    <DataGridTextColumn Binding="{Binding Name, Mode=TwoWay, NotifyOnTargetUpdated=True, UpdateSourceTrigger=LostFocus}" Header="Name" Width="auto">
                        <DataGridTextColumn.ElementStyle>
                            <Style TargetType="TextBlock">
                                <Setter Property="Padding" Value="0,0,30,0"/>
                            </Style>
                        </DataGridTextColumn.ElementStyle>
                    </DataGridTextColumn>
                    
                    <DataGridTextColumn Header="Height" Width="auto">
                        <DataGridTextColumn.ElementStyle>
                            <Style TargetType="TextBlock">
                                <Setter Property="Text" Value="{Binding Height, Converter={StaticResource AddMeasureToDimensionConverterResource}}"/>
                                <Setter Property="TextAlignment" Value="Right"/>
                            </Style>
                        </DataGridTextColumn.ElementStyle>
                        <DataGridTextColumn.EditingElementStyle>
                            <Style TargetType="TextBox">
                                <Setter Property="Text" Value="{Binding Height, UpdateSourceTrigger=LostFocus}"/>
                            </Style>
                        </DataGridTextColumn.EditingElementStyle>
                    </DataGridTextColumn>

                    <DataGridTextColumn Binding="{Binding Amount, UpdateSourceTrigger=PropertyChanged}" Header="Amount" Width="auto">
                        <DataGridTextColumn.ElementStyle>
                            <Style TargetType="TextBlock">
                                <Setter Property="TextAlignment" Value="Right"/>
                            </Style>
                        </DataGridTextColumn.ElementStyle>
                    </DataGridTextColumn>
                    
                    <DataGridTextColumn Width="2" CellStyle="{Binding Source={StaticResource EmptyColumnCellStyle}}" 
                                                  HeaderStyle="{Binding Source={StaticResource EmptyColumnHeaderStyle}}"/>

                    <DataGridCheckBoxColumn Binding="{Binding Sellable, UpdateSourceTrigger=PropertyChanged}" Header="Sellable" Width="auto"/>
                    <DataGridCheckBoxColumn Binding="{Binding NeedsLight, UpdateSourceTrigger=PropertyChanged}" Header="Needs Light" Width="70"/>
                    <DataGridCheckBoxColumn Binding="{Binding Vulnerable, UpdateSourceTrigger=PropertyChanged}" Header="Vulnerable" Width="auto"/>
                    <DataGridCheckBoxColumn Binding="{Binding NeedsTreeSupport, UpdateSourceTrigger=PropertyChanged}" Header="Needs Tree Support" Width="100"/>
                    
                    <DataGridComboBoxColumn ItemsSource="{Binding Source={StaticResource EnumFootType}}" SelectedItemBinding="{Binding FootEnum, UpdateSourceTrigger=PropertyChanged}" Header="Foot Type" Width="60"/>
                    <DataGridComboBoxColumn ItemsSource="{Binding Source={StaticResource EnumWateringNeeds}}" SelectedItemBinding="{Binding WNeeds, UpdateSourceTrigger=PropertyChanged}" Header="Watering"/>
                    <DataGridComboBoxColumn ItemsSource="{Binding Source={StaticResource EnumTemperatureNeeds}}" SelectedItemBinding="{Binding PTemperature, UpdateSourceTrigger=PropertyChanged}" Header="Temperature"/>

                    <DataGridTextColumn Width="2" CellStyle="{Binding Source={StaticResource EmptyColumnCellStyle}}" 
                                                  HeaderStyle="{Binding Source={StaticResource EmptyColumnHeaderStyle}}"/>

                    <DataGridTextColumn Header="Depth Per Plant" Width="85">
                        <DataGridTextColumn.ElementStyle>
                            <Style TargetType="TextBlock">
                                <Setter Property="Text" Value="{Binding DepthPerPlant, Converter={StaticResource AddMeasureToDimensionConverterResource}}"/>
                                <Setter Property="TextAlignment" Value="Right"/>
                            </Style>
                        </DataGridTextColumn.ElementStyle>
                        <DataGridTextColumn.EditingElementStyle>
                            <Style TargetType="TextBox">
                                <Setter Property="Text" Value="{Binding DepthPerPlant, UpdateSourceTrigger=LostFocus}"/>
                            </Style>
                        </DataGridTextColumn.EditingElementStyle>
                    </DataGridTextColumn>

                    <DataGridTextColumn Header="Width Per Plant" Width="85">
                        <DataGridTextColumn.ElementStyle>
                            <Style TargetType="TextBlock">
                                <Setter Property="Text" Value="{Binding WidthPerPlant, Converter={StaticResource AddMeasureToDimensionConverterResource}}"/>
                                <Setter Property="TextAlignment" Value="Right"/>
                            </Style>
                        </DataGridTextColumn.ElementStyle>
                            <DataGridTextColumn.EditingElementStyle>
                                <Style TargetType="TextBox">
                                    <Setter Property="Text" Value="{Binding WidthPerPlant, UpdateSourceTrigger=LostFocus}"/>
                                </Style>
                            </DataGridTextColumn.EditingElementStyle>
                    </DataGridTextColumn>

                    <DataGridTextColumn Header="Total Volume" Width="85" IsReadOnly="True">
                        <DataGridTextColumn.ElementStyle>
                            <Style TargetType="TextBlock">
                                <Setter Property="Text" Value="{Binding TotalSquareCentimeters, Converter={StaticResource AddMeasureToVolumeConverterResource}}"/>
                                <Setter Property="TextAlignment" Value="Right"/>
                            </Style>
                        </DataGridTextColumn.ElementStyle>
                    </DataGridTextColumn>

                    <DataGridTextColumn Width="2" CellStyle="{Binding Source={StaticResource EmptyColumnCellStyle}}" 
                                                  HeaderStyle="{Binding Source={StaticResource EmptyColumnHeaderStyle}}"/>

                    <!--#region ComboBoxColumn-->
                    <!--<DataGridComboBoxColumn 
                        Header="Combo Box Column"
                        ItemsSource="{Binding Source={StaticResource LocationViewSourceResource}}"
                        TextBinding="{Binding Path=LocationName}">
                        <DataGridComboBoxColumn.EditingElementStyle>
                            <Style TargetType="ComboBox">
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="ComboBox">
                                            <ComboBox 
                                                ItemsSource="{Binding RelativeSource={RelativeSource AncestorType={x:Type local:AddView}}, Path=DataContext.LocationsComboBoxViewSource.View}"
                                                Text="{Binding LocationName}"
                                                SelectedValue="{Binding LocationName}"
                                                SelectedValuePath="Name"
                                                DisplayMemberPath="LocationName">
                                                <ComboBox.GroupStyle>
                                                    <GroupStyle>

                                                        <GroupStyle.ContainerStyle>
                                                            <Style TargetType="{x:Type GroupItem}">
                                                                <Setter Property="Margin" Value="3,5"/>
                                                            </Style>
                                                        </GroupStyle.ContainerStyle>

                                                        <GroupStyle.HeaderTemplate>
                                                            <DataTemplate>
                                                                <TextBlock 
                                                                Text="{Binding Name, Converter={StaticResource IsCompatibleToComboBoxTitleResource}}" 
                                                                FontWeight="Bold"/>
                                                            </DataTemplate>
                                                        </GroupStyle.HeaderTemplate>


                                                    </GroupStyle>
                                                </ComboBox.GroupStyle>
                                            </ComboBox>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </DataGridComboBoxColumn.EditingElementStyle>
                    </DataGridComboBoxColumn>-->
                    <!--#endregion-->

                    <!--#region TemplateColumn-->
                    <DataGridTemplateColumn Header="Location">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate DataType="Location">
                                <StackPanel Orientation="Horizontal" Margin="0,0,25,0">
                                    <TextBlock Text="{Binding Path=AreaName}"/>
                                    <TextBlock Text=" - "/>
                                    <TextBlock Text="{Binding Path=LocationName}"/>
                                </StackPanel>
                                <!--<ComboBox Focusable="False">
                                    <ComboBoxItem IsSelected="True">
                                        <TextBlock Text="{Binding LocationName, NotifyOnTargetUpdated=False}"/>
                                    </ComboBoxItem>
                                </ComboBox>-->
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                        <DataGridTemplateColumn.CellEditingTemplate>
                            <DataTemplate>
                                <!-- SelectedValuePath Leder på location-->
                                <!-- SelectedValue Leder på plant / i datacontext-->
                                <ComboBox 
                                    ItemsSource="{Binding RelativeSource={RelativeSource AncestorType={x:Type local:AddView}}, Path=DataContext.LocationsComboBoxViewSource.View}">
                                    <!--DisplayMemberPath="LocationName"
                                    Text="{Binding LocationName, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                                    
                                    SelectedValue="{Binding LocationName}"-->

                                    <ComboBox.SelectedItem>
                                        <!--<MultiBinding StringFormat="{}{0} - {1}">
                                            <Binding  RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType=DataGridRow}" Path="Item.LocationName"/>
                                            <Binding  RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType=DataGridRow}" Path="Item.AreaName"/>
                                        </MultiBinding>-->
                                        <MultiBinding Converter="{StaticResource LocNameAreaNameToLocationConverterResource}">
                                            <Binding  RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType=DataGridRow}" Path="Item.LocationName"/>
                                            <Binding  RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType=DataGridRow}" Path="Item.AreaName"/>
                                        </MultiBinding>
                                        <!--<MultiBinding>
                                            <MultiBinding StringFormat="{}{0} - {1}">
                                                <Binding Path="Text" ElementName="LocationName" />
                                                <Binding Path="Text" ElementName="AreaName" />
                                            </MultiBinding>
                                        </MultiBinding>-->
                                    </ComboBox.SelectedItem>

                                    <ComboBox.GroupStyle>
                                        <GroupStyle>

                                            <GroupStyle.ContainerStyle>
                                                <Style TargetType="{x:Type GroupItem}">
                                                    <Setter Property="Margin" Value="3,5"/>
                                                    <!--<Setter Property="Template">
                                                        <Setter.Value>
                                                            <ControlTemplate TargetType="{x:Type GroupItem}">
                                                                <Grid>
                                                                    <TextBlock Grid.Row="0" Text="{Binding Name, Converter={StaticResource IsCompatibleToComboBoxTitleResource}}" FontWeight="Bold"/>
                                                                    <ItemsPresenter Grid.Row="1"/>
                                                                </Grid>
                                                            </ControlTemplate>
                                                        </Setter.Value>
                                                    </Setter>-->
                                                </Style>
                                            </GroupStyle.ContainerStyle>

                                            <GroupStyle.HeaderTemplate>
                                                <DataTemplate>
                                                    <TextBlock 
                                                    Text="{Binding Name, Converter={StaticResource IsCompatibleToComboBoxTitleResource}}" FontWeight="Bold"/>
                                                </DataTemplate>
                                            </GroupStyle.HeaderTemplate>
                                        </GroupStyle>
                                    </ComboBox.GroupStyle>
                                    <ComboBox.ItemTemplate>
                                        <DataTemplate DataType="Location">
                                            <StackPanel Orientation="Horizontal">
                                                <TextBlock Text="{Binding Path=AreaName}"/>
                                                <TextBlock Text=" - "/>
                                                <TextBlock Text="{Binding Path=LocationName}"/>
                                                <!--<TextBlock Text=" - "/>
                                                <TextBlock Text="{Binding Path=AvailableSquareMeters}"/>-->
                                            </StackPanel>
                                        </DataTemplate>
                                    </ComboBox.ItemTemplate>

                                </ComboBox>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellEditingTemplate>
                    </DataGridTemplateColumn>
                    <!--#endregion-->

                    <!-- Test
                    <DataGridTextColumn Binding="{Binding AreaName}" Header="Area" Width="auto"/>
                    <DataGridTextColumn Binding="{Binding LocationName}" Header="Location"/>
                     Test -->

                </DataGrid.Columns>
            </DataGrid>
        </Grid>

        <Grid Grid.Row="1" Margin="4,5,10,10">
            <DataGrid x:Name="AreaDataGrid" AutoGenerateColumns="False" 
                      EnableRowVirtualization="True" 
                      ItemsSource="{Binding AreaViewSource.View}" 
                      RowDetailsVisibilityMode="VisibleWhenSelected" SelectedItem="{Binding SelectedItemArea}"
                      Visibility="Collapsed"
                      DataGridCell.Selected="DataGridCell_Selected">
                <DataGrid.Columns>
                    <!--<DataGridTextColumn Binding="{Binding Id}" Header="Id" Width="auto" IsReadOnly="True"/>-->
                    <DataGridTextColumn Binding="{Binding AreaName}" Header="Name" Width="auto"/>
                </DataGrid.Columns>
            </DataGrid>
        </Grid>

        <!--<StackPanel Grid.Row="1" Name="StackPanelInfoArea" Visibility="Collapsed">
            <TextBlock Text="Areas" FontSize="24" FontWeight="Black" FontFamily="Roboto" Margin="0,5,0,5" Foreground="{StaticResource BrushPrimary2}"/>
            <TextBlock Margin="0,0,0,5" Text="Name of the Area:"/>
            <TextBox Text="{Binding SelectedItemArea.AreaName, Mode=TwoWay, NotifyOnTargetUpdated=True}" TargetUpdated="OnTargetUpdated"/>
            <TextBlock Margin="0,5" Text="ID:"/>
            <TextBox Text="{Binding SelectedItemArea.Id, Mode=TwoWay, NotifyOnTargetUpdated=True}" TargetUpdated="OnTargetUpdated"/>
        </StackPanel>-->

        <Grid Grid.Row="1" Margin="4,5,10,10">
            <DataGrid x:Name="LocationDataGrid" AutoGenerateColumns="False" 
                      EnableRowVirtualization="True" 
                      ItemsSource="{Binding LocationViewSource.View}" 
                      RowDetailsVisibilityMode="VisibleWhenSelected" SelectedItem="{Binding SelectedItemLocation}"
                      Visibility="Collapsed"
                      DataGridCell.Selected="DataGridCell_Selected">
                <DataGrid.Columns>
                    <!--<DataGridTextColumn Binding="{Binding Id}" Header="Id" Width="auto" IsReadOnly="True"/>-->
                    <DataGridTextColumn Binding="{Binding LocationName}" Header="Name of Location" Width="auto"/>
                    <DataGridTextColumn Width="2" CellStyle="{Binding Source={StaticResource EmptyColumnCellStyle}}" 
                                                  HeaderStyle="{Binding Source={StaticResource EmptyColumnHeaderStyle}}"/>

                    <DataGridCheckBoxColumn Binding="{Binding Light}" Header="Light" Width="auto"/>
                    <DataGridCheckBoxColumn Binding="{Binding TreeSupport}" Header="Has tree support" Width="auto"/>
                    <DataGridComboBoxColumn ItemsSource="{Binding Source={StaticResource EnumWateringMethod}}" SelectedItemBinding="{Binding WMethod}" Header="Watering Method"/>
                    <DataGridComboBoxColumn ItemsSource="{Binding Source={StaticResource EnumTemperatures}}" SelectedItemBinding="{Binding LTemperatures}" Header="Temperature"/>
                    <DataGridTextColumn Width="2" CellStyle="{Binding Source={StaticResource EmptyColumnCellStyle}}" 
                                                  HeaderStyle="{Binding Source={StaticResource EmptyColumnHeaderStyle}}"/>
                    
                    <DataGridTextColumn Binding="{Binding Depth}" Header="Depth" Width="75"/>
                    <DataGridTextColumn Binding="{Binding Width}" Header="Width" Width="75"/>
                    <DataGridTextColumn Binding="{Binding AvailableSquareCentimeters}" Header="Available Space" Width="auto"/>
                    <DataGridTextColumn Width="2" CellStyle="{Binding Source={StaticResource EmptyColumnCellStyle}}" 
                                                  HeaderStyle="{Binding Source={StaticResource EmptyColumnHeaderStyle}}"/>

                    <DataGridTextColumn Binding="{Binding AreaName}" Header="Area" Width="75"/>
                </DataGrid.Columns>
            </DataGrid>
        </Grid>

        <!--<StackPanel Grid.Row="1" Name="StackPanelInfoLocation" Visibility="Collapsed" >
            <TextBlock Text="Locations" FontSize="24" FontWeight="Black" FontFamily="Roboto" Margin="0,5,0,5" Foreground="{StaticResource BrushPrimary2}"/>
            <TextBlock Margin="0,0,0,5" Text="Name of the Location:"/>
            <TextBox Text="{Binding SelectedItemLocation.Name, Mode=TwoWay, NotifyOnTargetUpdated=True}" TargetUpdated="OnTargetUpdated"/>
            <TextBlock Margin="0,5" Text="ID:"/>
            <TextBox Text="{Binding SelectedItemLocation.Id, Mode=TwoWay}"/>
            <TextBlock Margin="0,5" Text="Bottom Water:"/>
            <TextBox Text="{Binding SelectedItemLocation.BottomWater, Mode=TwoWay}"/>
            <TextBlock Margin="0,5" Text="Normal Watering:"/>
            <TextBox Text="{Binding SelectedItemLocation.NormalWatering, Mode=TwoWay}"/>
            <TextBlock Margin="0,5" Text="Warm:"/>
            <TextBox Text="{Binding SelectedItemLocation.Warm, Mode=TwoWay}"/>
            <TextBlock Margin="0,5" Text="Light:"/>
            <TextBox Text="{Binding SelectedItemLocation.Light, Mode=TwoWay}"/>
            <TextBlock Margin="0,5" Text="Cold:"/>
            <TextBox Text="{Binding SelectedItemLocation.Cold, Mode=TwoWay}"/>
            <TextBlock Margin="0,5" Text="AreaID:"/>
            <TextBox Text="{Binding SelectedItemLocation.AreaName, Mode=TwoWay}"/>
        </StackPanel>-->

        <StackPanel Orientation="Horizontal" HorizontalAlignment="Right"  Grid.Row="3" Margin="2">
            <Button Margin="2,0" Content="Delete" Name="ButtonDelete" Click="ButtonDelete_Click" Grid.Row="1"/>
            <Button Command="{Binding saveButtonCommand}" Content="Save" Margin="2,0" Grid.Row="2"/>
        </StackPanel>

        

    </Grid>
</UserControl>
